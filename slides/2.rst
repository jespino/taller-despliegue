Bloque 2: Montar un servidor para producción

Explicacion 1:

Es necesario configurar el virtualbox para que el nat nos pase todo lo del
puerto 8000 del host al puerto 8000 del guest.

Paso 1:

Configuramos la red de la maquina virtual y de paso la memoria.

Explicacion 2:

Nosotros solemos usar un usuario propio

Paso 2:

Creamos el usuario para el proyecto (por ejemplo demo).

$ adduser demo

Explicacion 3:

Repetimos la mayoría de los pasos anteriores en este entorno.

Paso 3:

Copiamos nuestro repo con git.
Creamos un virtualenv para el proyecto.
Instalamos las dependencias del sistema "PostgreSQL".
Instalamos los requisitos de nuestro proyecto.
Ejecutamos nuestra aplicacion sobre gunicorn.
Comprobamos que funciona.

Explicacion 4:

No queremos lanzar nuestro servicio a mano cada vez, así que necesitamos que
alguien lo lance por nosotros, hay muchas opciones, pero nosotros usamos
supervisord para esta tarea.

Paso 4:

Creamos una configuración de supervisord para que lanze nuestra aplicación
usando gunicorn. Y por supuesto, arrancamos nuestra aplicación. (Supervisord
debería arrancarse al inicio del sistema).

Explicación 5:

Una vez tenemos un gunicorn funcionando y gestionado por el supervisord, necesitamos que configurar nuestro nginx para que lo sirva correctamente.

Paso 5:

Creamos un proxy inverso que todas las peticiones que lleguen al puerto 80 sean redirigidas al puerto 8000 de nuestro servidor.

Explicacion 6:

Nuestro servidor ademas de servir de proxy inverso debe servir los ficheros estaticos y los medias de django.

Paso 6:

Creamos las rutas para servir los ficheros estaticos y medias en el nginx.

Explicacion 7:

Usar un puerto para la comunicación entre el nginx y el gunicorn además de ser
suboptimo puede ser menos seguro (si no tenemos cuidado) así que solemos usar
un socket unix.

Paso 7:

Configurar supervisord para que el gunicorn se sirva usando un socket unix

Configurar el nginx para que haga de proxy contra el socket unix en vez de contra el puerto

Explicacion 8:

Un caso muy comun en los proyectos django en Kaleidos es el uso de tareas asincronas usando Celery.

Además solemos usar como broker de mensajes RabbitMQ.

Paso 8:

Instalar RabbitMQ, configurar el celery en el settings de django, añadir la tarea celery al supervisord.

Explicacion 9:

Otra cosa muy habitual a configurar es el servicio de correo, nosotros solemos
usar Amazon SES o el servidor PostFix con un servidor relay apropiado. Incluso
a veces el servidor relay es el de Amazon SES.

Paso 9:

Instalar y configurar el postfix de manera que pueda enviar correos.
